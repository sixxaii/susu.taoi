# -*- coding: utf-8 -*-
"""lab3-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10T8MWKqfgpVVYVTcz8cKYdEFwGvlMvdV
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn import datasets
import random 
import numpy as np 
import matplotlib.pyplot as plt 
from sklearn.cluster import KMeans
from sklearn import preprocessing 

iris_df = pd.read_csv(r'/content/drive/MyDrive/iris.csv')
cust_df = pd.read_csv(r'/content/drive/MyDrive/customers.csv')

le = preprocessing.LabelEncoder()
le.fit(iris_df['species'].astype(str))
iris_df['species'] = le.transform(iris_df['species'].astype(str))

Xi = iris_df.iloc[:,0:].values
Xi = np.nan_to_num(Xi) 
print(cust_df.iloc[:,2:])
X = cust_df.iloc[:,2:].values
X = np.nan_to_num(X) 

data_iris = StandardScaler().fit_transform(Xi)
data = StandardScaler().fit_transform(X)


clusterNum = 3
k_means = KMeans(init = "k-means++", n_clusters = clusterNum, n_init = 12)
k_means_iris = KMeans(init = "k-means++", n_clusters = 3, n_init = 12)
k_means.fit(X)
k_means_iris.fit(Xi)
labels = k_means.labels_
labels_iris = k_means_iris.labels_
# print(labels)

iris_df["Iris_km"] = labels_iris
cust_df["Clus_km"] = labels

iris_df.groupby('Iris_km').mean()
cust_df.groupby('Clus_km').mean()

area_iris = np.pi * ( Xi[:, 1])**2  
plt.scatter(Xi[:, 0], Xi[:, 2], s=area_iris, c=labels_iris.astype(np.float), alpha=1.0)
plt.xlabel('Sepal length', fontsize=18)
plt.ylabel('Pretal length', fontsize=16)
plt.show()

area = np.pi * ( X[:, 1])**2  
plt.scatter(X[:, 0], X[:, 3], s=area, c=labels.astype(np.float), alpha=1.0)
plt.xlabel('Age', fontsize=18)
plt.ylabel('Income', fontsize=16)

plt.show()


from mpl_toolkits.mplot3d import Axes3D 
fig = plt.figure(1, figsize=(8, 6))
plt.clf()
ax = Axes3D(fig, rect=[0, 0, .95, 1], elev=48, azim=134)

plt.cla()
# plt.ylabel('Age', fontsize=18)
# plt.xlabel('Income', fontsize=16)
# plt.zlabel('Education', fontsize=16)
ax.set_xlabel('Education')
ax.set_ylabel('Age')
ax.set_zlabel('Income')

ax.scatter(X[:, 1], X[:, 0], X[:, 3], c= labels.astype(np.float))